#! /usr/bin/env ruby -Ku
# -*- coding: utf-8; -*-
require 'optparse'
require './manageuser.rb'
require 'spreadsheet'

ManageUser.need_root_or_exit unless $DEBUG
ManageUser.setup_connection

def displayname_to_hash(array)
  @array = array
  @new = {}
  if @array.class == Array
    @array.each do |h|
      if h['lang-ja'].class == String
        @new['lang-ja'] = h['lang-ja']
      end
      if h['lang-ja'].class == Hash
        @new['phonetic_ja'] = h['lang-ja']['phonetic']
      end
      if h['lang-en'].class == Hash
        @new['phonetic_en'] = h['lang-en']['phonetic']
      end
    end
  else
    @new = {}
  end
  return @new
end

def userinfo(user)
  @userinfo = Array.new
  @user = ManageUser::User.find("#{user}")
  @userinfo.push @user.cn
  @new = displayname_to_hash(@user.displayName)
  @userinfo.push @new['phonetic_en'] ||= ''
  @userinfo.push @new['lang-ja'] ||= ''
  @userinfo.push @new['phonetic_ja'] ||= ''
  @userinfo.push @user.gecos
  @userinfo.push @user.givenName
  @userinfo.push @user.sn
  @userinfo.push ( @user.uid  + '@math.kyoto-u.ac.jp')
end

def create_row0(sheet)
  @sheet = sheet
  @sheet[0,0] = "DisplayName(Web:en)"
  @sheet[0,1] = "Phonetic(Web:en)"
  @sheet[0,2] = "DisplayName(Web:ja)"
  @sheet[0,3] = "Phonetic(Web:ja)"
  @sheet[0,4] = "FullName(DB)"
  @sheet[0,5] = "FirstName"
  @sheet[0,6] = "FamilyName"
  @sheet[0,7] = "Mail"
end

book = Spreadsheet::Workbook.new
groups = {
  'kyoju' => '教授',
  'junkyoju' => '准教授',
  'koshi' => '講師',
  'jokyo' => '助教',
  'gakushin-pd' => '学振 PD',
  'tokuken' => '特定研究員',
  'fellow' => '研究員',
  'jimushitsu' => '事務室',
  'toshojimu' => '図書事務',
  'yomuin' => '用務員',
  'doctor' => '博士',
  'master' => '修士'
}
groups.each_with_index do |group, i|
  sheet = book.create_worksheet
  sheet.name = group[1]
  create_row0(sheet)
  (0..7).each do |num| sheet.column(num).width = 20 end
  ManageUser::Group.find(group[0]).memberUID.each_with_index do |uid, i|
    userinfo(uid).each_with_index do |value, j|
      sheet[i+1,j] = value
    end
  end
end
book.write('meibo.xls')
