#!/usr/bin/ruby -K

require "tempfile"
require "optparse"

LDAPBASE = "dc=math,dc=kyoto-u,dc=ac,dc=jp"
LDAPMANAGER = "cn=Manager,#{LDAPBASE}"
LDAPOPTIONS = "-vW -D #{LDAPMANAGER}"

$config = {}

opts = OptionParser.new
opts.on('-c', '--command=COMMAND', "Subcommand: add, remove") do |command|
	set_mode command
end
opts.on('-g', '--group [GROUP_CN]', "Group to modify") do |group|
	$config[:group] = group
end
opts.on('-u', '--user [USER_CN]', "User to add or remove") do |user|
	$config[:user] = user
end
opts.on('-h', '--help', "Show this message") do |group|
	puts "Manage LDAP group"
	puts opts
	exit
end 

def set_mode(command)
	case (command)
	when 'add', 'add_to_group'
		$config[:command] = :add_to_group
	when 'remove', 'remove_from_group'
		$config[:command] = :remove_from_group
	else
		puts "No such command #{command}"
	end
end

opts.order!(ARGV)
if (!ARGV.empty?) then
	set_mode(ARGV.shift)
	opts.order!(ARGV)
end

def modify_impl(type, user, group)
	Tempfile.open('oa') do |temp|
		ldif = <<EOLdif
dn: cn=#{group},ou=Group,#{LDAPBASE}
changetype: modify
#{type}: memberUid
memberUid: #{user}
EOLdif
		temp.puts ldif
		temp.flush
		cmd = "ldapmodify #{LDAPOPTIONS} -f #{temp.path}"
		puts "### LDIF file ###"
		puts ldif
		puts "### LDIF file ###"
		puts cmd
		system cmd
	end
end

def add_to_group(user, group)
	modify_impl('add', user, group)
end

def remove_from_group(user, group)
	modify_impl('delete', user, group)
end

case ($config[:command])
when :add_to_group
	p $config
	add_to_group($config[:user], $config[:group])
when :remove_from_group
	p $config
	remove_from_group($config[:user], $config[:group])
when :changeshell
	p $config
	#change_shell($config[:user], $config[:shell])
else
	puts opts
end

